@page
@model RazorCoursework.Pages.ReviewCommentsModel
@{
}

<div class="row justify-content-center">
    <div class="col-10 border border-dark text-center" style="margin: 10px">
        <a class="text-muted"
           asp-area=""
           asp-page="/Home"
           asp-route-user="@Model.Review.ReviewCreatorName"
           asp-route-p="1">
            Автор: @Model.Review.ReviewCreatorName (@Model.GetCreatorLikesCount(Model.Review.ReviewCreatorID) 
            <img src="https://img.icons8.com/material/24/000000/like--v1.png"
                 width="15" height="15" />)
        </a>
        <br />
        <small class="text-muted">Создан: @Model.Review.CreationDate</small>
        <hr />
        <h4 style="margin-top: 30px; margin-bottom: 30px">@Model.Review.ReviewSubjectName</h4>
        <h5 class="text-muted">@Model.Review.ReviewSubjectGenre</h5>
        <hr />
        <p>@Model.Review.ReviewText</p>
        <hr />
        <p>Теги:</p>
        <div style="margin-bottom: 30px" class="d-block">
            @foreach (var t in Model.Review.TagRelations)
            {
                <a class="btn btn-light btn-outline-dark"
                   asp-page="SearchReviews"
                   asp-route-tag="@t.Tag.TagName"
                   asp-route-p="1">
                    <span class="d-inline-block">@t.Tag.TagName</span>
                </a>
            }
        </div>
        @if (User.Identity.IsAuthenticated)
        {
            <form id="form-like-@Model.Review.ReviewID" onsubmit="return false;">
                <input type="hidden" name="ReviewID" value="@Model.Review.ReviewID" />
                <div asp-validation-summary="All" class="text-danger"></div>
                <button id="btn-like-@Model.Review.ReviewID"
                        type="submit"
                        style="border: none;
                                   outline: none;
                                   position: absolute;
                                   bottom: 10px;
                                   left: 10px;
                                   background: none">
                    @if (Model.AlreadyLikedReview(Model.Review.ReviewID))
                    {
                        <img id="img-like-@Model.Review.ReviewID"
                             src="https://img.icons8.com/material/24/000000/like--v1.png"
                             width="25" height="25" />
                    }
                    else
                    {
                        <img id="img-like-@Model.Review.ReviewID"
                             src="https://img.icons8.com/material-outlined/24/000000/like--v1.png"
                             width="25" height="25" />
                    }
                    <small class="text-muted" id="likesCount-@Model.Review.ReviewID">
                        @Model.GetLikesCount(Model.Review.ReviewID)
                    </small>
                </button>
            </form>
            <form id="form-rating-@Model.Review.ReviewID" onsubmit="return false;">
                <input type="hidden" name="ReviewID" value="@Model.Review.ReviewID" />
                <div asp-validation-summary="All" class="text-danger"></div>
                @for (int i = 1; i <= 5; i++)
                {
                    <button id="btn-rating-@i-@Model.Review.ReviewID"
                            data-rating="@i"
                            type="submit"
                            style="border: none;
                                   outline: none;
                                   background: none">
                        @if (Model.ReviewRating >= i)
                        {
                            <img id="img-rating-@i-@Model.Review.ReviewID"
                                 src="https://img.icons8.com/ios-filled/30/000000/star--v1.png"
                                 width="25" height="25" />
                        }
                        else
                        {
                            <img id="img-rating-@i-@Model.Review.ReviewID"
                                 src="https://img.icons8.com/ios/30/000000/star--v1.png"
                                 width="25" height="25" />
                        }
                    </button>
                }
            </form>
            if (Model.Review.ReviewCreatorName == User.Identity.Name)
            {
                <a asp-area=""
                   asp-page="/RemoveReview"
                   asp-route-id="@Model.Review.ReviewID"
                   style="position: absolute; top: 10px; right: 10px; ">
                    <img src="https://img.icons8.com/windows/32/000000/trash.png" width="30" height="30" />
                </a>
                <a asp-area=""
                   asp-page="/EditReview"
                   asp-route-id="@Model.Review.ReviewID"
                   style="position: absolute; top: 10px; right: 40px; ">
                    <img src="https://img.icons8.com/material-outlined/24/000000/edit--v1.png" width="25" height="25" />
                </a>
            }
        }
        <p style="margin-bottom: 10px">
            Средний рейтинг:
            <span id="rating-text">
                @Model.GetAverageRating(Model.Review.ReviewID) / 5
            </span>
        </p>
        <br />
        @for (int i = 1; i <= 5; i++)
        {
            <button id="btn-author-rating-@i-@Model.Review.ReviewID"
                    data-rating="@i"
                    style="border: none;
                      outline: none;
                      background: none">
                @if (Model.ReviewAuthorRating >= i)
                {
                    <img id="img-author-rating-@i-@Model.Review.ReviewID"
                         src="https://img.icons8.com/ios-filled/30/000000/star--v1.png"
                         width="25" height="25" />
                }
                else
                {
                    <img id="img-rating-@i-@Model.Review.ReviewID"
                         src="https://img.icons8.com/ios/30/000000/star--v1.png"
                         width="25" height="25" />
                }
            </button>
        }
        <p style="margin-bottom: 10px">
            Рейтинг автора
        </p>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    $('[id^="btn-like"]').on('click', function () {
        var id = $(this).closest('form').serializeArray().reduce(function (obj, item) {
            obj[item.name] = item.value;
            return obj;
        }, {})['ReviewID'];
        $.ajax({
            type: "POST",
            url: "/ReviewComments?handler=Like",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            data: id,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                var responseParts = response.split(';');
                $('#likesCount-' + id).text(responseParts[0]);
                if (responseParts[1] == 'True') {
                    $('#img-like-' + id)
                        .attr('src', 'https://img.icons8.com/material-outlined/24/000000/like--v1.png');
                }
                else if (responseParts[1] == 'False') {
                    $('#img-like-' + id)
                        .attr('src', 'https://img.icons8.com/material/24/000000/like--v1.png');
                }
            },
            failure: function (response) {
                alert(response);
            }
        });
        return false;
    })
    $('[id^="btn-rating"]').on('click', function () {
        var formData = $(this).closest('form').serializeArray().reduce(function (obj, item) {
            obj[item.name] = item.value;
            return obj;
        }, {});
        var id = formData['ReviewID'];
        var ratingValue = $(this).data('rating');
        var data = id + ';' + ratingValue;
        $.ajax({
            type: "POST",
            url: "/ReviewComments?handler=Rating",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            data: data,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                var responseParts = response.split(';');
                if (responseParts[0] == 'False') {
                    for (var i = 1; i <= 5; i++)
                        if (i <= ratingValue)
                            $('#img-rating-' + i + '-' + id)
                                .attr('src', 'https://img.icons8.com/ios-filled/30/000000/star--v1.png');
                        else
                            $('#img-rating-' + i + '-' + id)
                                .attr('src', 'https://img.icons8.com/ios/30/000000/star--v1.png');
                }
                else
                    for (var i = 1; i <= 5; i++) {
                        $('#img-rating-' + i + '-' + id)
                            .attr('src', 'https://img.icons8.com/ios/30/000000/star--v1.png');
                    }
                $('#rating-text').text(responseParts[1] + ' / 5');
            },
            failure: function (response) {
                alert(response);
            }
        });
        return false;
    })
</script>